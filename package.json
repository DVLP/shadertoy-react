{
  "name": "shadertoy-react",
  "version": "1.0.6",
  "description": "React component that let's you easily render a shader on a canvas by simply passing a fragment shader, following the shadertoy syntax, and logic, so you don't have to worry about passing basic uniforms, or setting up the webgl scene to do that, all the work is being done for you.",
  "main": "lib/shadertoy-react.min.js",
  "homepage": "https://mvilledieu.github.io/shadertoy-react/",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1",
    "start": "webpack-dev-server --mode development --config webpack.common.js",
    "transpile": "webpack --mode production --config webpack.lib.js",
    "prepublishOnly": "rm -rf lib && mkdir lib && npm run transpile",
    "build": "webpack --mode production --config webpack.common.js",
    "deploy": "gh-pages -d examples/dist",
    "publish-demo": "npm run build && npm run deploy",
    "publish-npm": "npm run prepublishOnly && npm publish --registry https://registry.npmjs.org"
  },
  "publishConfig": {
    "registry": "https://registry.npmjs.org"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/mvilledieu/shadertoy-react"
  },
  "author": "Morgan Villedieu <morgan.villedieu@gmail.com>",
  "license": "MIT",
  "devDependencies": {
    "@babel/cli": "^7.0.0",
    "@babel/core": "^7.0.0",
    "@babel/plugin-proposal-class-properties": "^7.0.0",
    "@babel/plugin-proposal-object-rest-spread": "^7.0.0",
    "@babel/preset-env": "^7.0.0",
    "@babel/preset-flow": "^7.0.0",
    "@babel/preset-react": "^7.0.0",
    "babel-loader": "^8.0.0",
    "gh-pages": "^2.0.1",
    "html-webpack-plugin": "^3.2.0",
    "react": " ^16.6.1",
    "react-dom": "^16.6.1",
    "styled-components": "^4.0.3",
    "uglifyjs-webpack-plugin": "^2.0.1",
    "webpack": "^4.25.1",
    "webpack-cli": "^3.1.2",
    "webpack-dev-server": "^3.1.10",
    "file-loader": "^2.0.0"
  },
  "peerDependencies": {
    "react": "^16.6.1",
    "react-dom": "^16.6.1"
  },
  "keywords": [
    "shadertoy",
    "shader",
    "glsl",
    "webgl",
    "react"
  ]
}
